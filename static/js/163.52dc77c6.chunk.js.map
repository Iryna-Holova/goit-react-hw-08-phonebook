{"version":3,"file":"static/js/163.52dc77c6.chunk.js","mappings":"+QAEaA,EAAkBC,EAAAA,GAAAA,IAAH,8JASfC,EAAWD,EAAAA,GAAAA,KAAH,yEAKRE,EAAYF,EAAAA,GAAAA,MAAH,mZAmBTG,EAAQH,EAAAA,GAAAA,IAAH,iI,sECjCLI,E,QAAeJ,GAAAA,OAAH,+T,iKCMZK,EAAgB,WACzB,OAAmCC,EAAAA,EAAAA,MAAnC,eAAOC,EAAP,KAAoBC,EAApB,KAAoBA,UACdC,GAAWC,EAAAA,EAAAA,MAcjB,OACI,SAAC,KAAD,WACI,SAAC,KAAD,CACIC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACN,IAAMC,EAAS,CAAC,EAchB,OAbKD,EAAOH,MAGP,2CAA2CK,KAAKF,EAAOH,OAGhDG,EAAOF,SAGd,UAAUI,KAAKF,EAAOF,YAEvBG,EAAOH,SAAW,qCAJlBG,EAAOH,SAAW,oBAFlBG,EAAOJ,MAAQ,wBAJfI,EAAOJ,MAAQ,oBAYZI,CACV,EACDE,SAjCQ,SAACC,GACjBZ,EAAUY,GACLC,MAAK,SAAAC,GACEA,EAASC,OACTC,EAAAA,EAAAA,GAAO,2CAEPC,EAAAA,EAAAA,GAAQ,iBACRf,EAAS,aAEhB,GACR,EAIO,UAqBI,UAAC,KAAD,CAAUgB,GAAIC,EAAAA,GAAd,WACI,UAAC,KAAD,oBAEI,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAW1B,EAAAA,SAE1C,UAAC,KAAD,uBAEI,SAAC,KAAD,CAAOwB,KAAK,WAAWC,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAW1B,EAAAA,SAE7C,UAAC,IAAD,CAAcwB,KAAK,SAASG,SAAUtB,EAAtC,WACMA,GAAa,SACdA,IAAa,SAACuB,EAAA,EAAD,CAAQC,QAAQ,4BAMrD,EC5DD,EAJc,WACV,OAAO,SAAC3B,EAAD,GACV,C","sources":["components/AuthForm/AuthForm.styled.jsx","components/SubmitButton/SubmitButton.styled.jsx","components/AuthForm/AuthFormLogin.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthFormWrapper = styled.div`\n    position: absolute;\n    top: 70px;\n    left: 50%;\n    transform: translate(-50%, 0);\n    width: 90vw;\n    max-width: 800px;\n`\n\nexport const FormBody = styled.form`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const FormLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    font-size: 24px;\n    font-style: italic;\n    margin-bottom: 40px;\n    border-bottom: 1px solid #000000;\n\n    & input{\n        background-color: transparent;\n        outline: none;\n        border: none;\n        font-family: inherit;\n        font-size: inherit;\n        height: 40px;\n    }\n`\n\nexport const Error = styled.div`\n    position: absolute;\n    bottom: -30px;\n    right: 0;\n    color: #ec1616;\n    font-style: italic;\n`","import styled from 'styled-components';\n\nexport const SubmitButton = styled.button`\nwidth: 100%;\npadding: 10px;\nborder-radius: 5px;\ntext-align: center;\nfont-size: 24px;\nfont-weight: bold;\ncolor: #ffffff;\nbackground-color: #557294;\ntransition: background-color 300ms ease-in-out;\n\n:hover, :focus {\n    background-color: #305885;\n}\n\n:disabled {\n    opacity: 0.6;\n}\n`;","import { Loader } from 'components/Loader/Loader';\nimport { SubmitButton } from 'components/SubmitButton/SubmitButton.styled';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { notify, success } from 'helpers/notification';\nimport { useNavigate } from 'react-router-dom';\nimport { useLoginUserMutation } from 'redux/connectionsApi';\nimport { AuthFormWrapper, Error, FormBody, FormLabel } from './AuthForm.styled';\n \nexport const AuthFormLogin = () => {\n    const [loginUser, { isLoading }] = useLoginUserMutation();\n    const navigate = useNavigate();\n    \n    const handleLogIn = (e) => {\n        loginUser(e)\n            .then(response => {\n                if (response.error) {\n                    notify('User does not exist or wrong password');\n                } else {\n                    success('Wellcome back');\n                    navigate('/contacts');\n                };\n            })\n    }\n\n    return (\n        <AuthFormWrapper>\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email) {\n                        errors.email = 'Field is required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    } else if (!values.password) {\n                        errors.password = 'Field is required';\n                    } else if (\n                        !/^.{7,}$/.test(values.password)\n                    ) {\n                        errors.password = 'Please enter 7 characters or more';\n                    }\n                    return errors;\n                }}\n                onSubmit={handleLogIn}\n            >\n                <FormBody as={Form}>\n                    <FormLabel>\n                        Email\n                        <Field type=\"email\" name=\"email\" />\n                        <ErrorMessage name=\"email\" component={Error} />\n                    </FormLabel>\n                    <FormLabel>\n                        Password\n                        <Field type=\"password\" name=\"password\" />\n                        <ErrorMessage name=\"password\" component={Error} />\n                    </FormLabel>\n                    <SubmitButton type=\"submit\" disabled={isLoading} >\n                        {!isLoading && 'Log in'}\n                        {isLoading && <Loader message='Please wait...' />}\n                    </SubmitButton>\n                </FormBody>\n            </Formik>\n        </AuthFormWrapper>\n    );\n};","import { AuthFormLogin } from \"components/AuthForm/AuthFormLogin\";\n\nconst Login = () => {\n    return <AuthFormLogin />\n}\n\nexport default Login;"],"names":["AuthFormWrapper","styled","FormBody","FormLabel","Error","SubmitButton","AuthFormLogin","useLoginUserMutation","loginUser","isLoading","navigate","useNavigate","initialValues","email","password","validate","values","errors","test","onSubmit","e","then","response","error","notify","success","as","Form","type","name","component","disabled","Loader","message"],"sourceRoot":""}