{"version":3,"file":"static/js/467.75eb2319.chunk.js","mappings":"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","sources":["components/SubmitButton/SubmitButton.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SubmitButton = styled.button`\nwidth: 100%;\npadding: 10px;\nborder-radius: 5px;\ntext-align: center;\nfont-size: 24px;\nfont-weight: bold;\ncolor: #ffffff;\nbackground-color: #557294;\ntransition: background-color 300ms ease-in-out;\n\n:hover, :focus {\n    background-color: #305885;\n}\n\n:disabled {\n    opacity: 0.6;\n}\n`;","import styled from 'styled-components';\n\nexport const FormTitle = styled.h2`\n    margin-bottom: 20px;\n    margin-top: 20px;\n    text-align: center;\n`\n\nexport const Form = styled.form`\nwidth: 350px;\nheight: 234px;\nbox-sizing: border-box;\npadding: 0px 30px 20px 30px;\nborder: 1px solid #305885;\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const Label = styled.label`\nmargin-bottom: 20px;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nborder-bottom: 1px solid black;\ntransition: color 300ms ease-in-out;\n\n:hover,\n:focus-within {\n    color: #305885;\n}\n`;\n\nexport const Input = styled.input`\nbackground-color: transparent;\noutline: none;\nborder: none;\nheight: 25px;\nwidth: 190px;\nfont-family: inherit;\nfont-size: 24px;\n`;","import { useState } from 'react';\nimport { useAddContactMutation, useEditContactMutation, useGetContactsQuery } from 'redux/contactsApi';\nimport { notify } from 'helpers/notification';\nimport { ImUser, ImPhone } from \"react-icons/im\";\nimport { Form, FormTitle, Input, Label } from './ContactForm.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { SubmitButton } from 'components/SubmitButton/SubmitButton.styled';\n\nexport const ContactForm = ({id, prevName, prevNumber, onClose }) => {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const [editContact] = useEditContactMutation();\n\n  const [name, setName] = useState(prevName || '');\n  const [number, setNumber] = useState(prevNumber || '');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      \n      case 'number':\n        setNumber(value);\n        break;\n      \n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = event => {\n    event.preventDefault();\n\n    const normalisedName = name.toLowerCase();\n    const isInContacts = contacts.find(item => item.name.toLowerCase() === normalisedName);\n\n    if (isInContacts) {\n      notify(`${name} is already in contacts`);\n    } else {\n      const contact = { name, number };\n      addContact(contact);\n    };\n    reset();\n  }\n\n  const handleEditContact = event => {\n    event.preventDefault();\n\n    const normalisedName = name.toLowerCase();\n    const isInContacts = contacts.find(item => ((item.name.toLowerCase() === normalisedName) && (item.id !== id)));\n\n    if (isInContacts) {\n      notify(`${name} is already in contacts`);\n    } else {\n      const contact = { id, name, number };\n      editContact(contact);\n      onClose();\n    };\n    \n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <>\n      <Form onSubmit={!id ? handleAddContact : handleEditContact}>\n        <FormTitle>\n          {!id ? 'Add your contacts here' : 'Edit contact'}\n        </FormTitle>\n        <Label><span><ImUser/> Name:</span><Input\n          type=\"text\"\n          value={name}\n          name='name'\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        /></Label>\n        <Label><span><ImPhone/> Number:</span><Input\n          type=\"tel\"\n          value={number}\n          name='number'\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        /></Label>\n        <SubmitButton\n          type='submit'\n          disabled={isLoading}\n        >\n          {!isLoading\n            ? 'Save'\n            : <Loader message='Please wait...'/>\n          }\n        </SubmitButton>\n      </Form>\n    </>\n  )\n};","import styled from 'styled-components';\n\nexport const ContactListContainer = styled.ul`\nmargin: 0 auto;\n`;","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\nheight: 30px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nborder-bottom: 1px solid #305885;\n\n:first-child {\n    border-top: 1px solid #305885;\n}\n`;\n\nexport const ContactWrapper = styled.span`\nwidth: 200px;\n&:not(:first-child) {\n    width: 150px;\n}\n`;\n\nexport const ContactButton = styled.button`\ntransition: color 300ms ease-in-out;\nmargin-left: 5px;\n\n:hover, :focus {\n    color: #305885;\n    outline: none;\n}\n`;","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`\n\nexport const ModalWindow = styled.div `\n  background-color: #fff;\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`\n","import { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { ModalWindow, Overlay } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root')\n\nconst Modal = ({onClose, children}) => {\n    useEffect(() => {\n        const handleKeyDown = event => {\n            if (event.code === 'Escape') {\n                onClose();\n            }\n        }\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        }\n    }, [onClose]);\n\n    const handleBackdropClick = event => {\n        if (event.target === event.currentTarget) {\n            onClose();\n        }\n    };\n\n    return createPortal(\n        <Overlay onClick={handleBackdropClick}>\n            <ModalWindow>{children}</ModalWindow>\n        </Overlay>,\n        modalRoot\n    )\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.node,\n};\n\nexport default Modal;","import PropTypes from \"prop-types\";\nimport { ImUser, ImPhone, ImBin, ImPencil } from \"react-icons/im\";\nimport { useDeleteContactMutation } from \"redux/contactsApi\";\nimport { ContactButton, ContactItem, ContactWrapper } from \"./ContactListItem.styled\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useState } from \"react\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport Modal from \"components/Modal/Modal\";\n\nexport const ContactListItem = ({ contact }) => {\n    const { id, name, number } = contact;\n    const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n    const [isModal, setIsModal] = useState(false);\n\n    const toggleModal = () => {\n        setIsModal(prev => !prev);\n    }\n\n    return (\n        <ContactItem>\n            <ContactWrapper><ImUser /> {name}</ContactWrapper>\n            <ContactWrapper><ImPhone /> {number}</ContactWrapper>\n            <ContactButton\n                onClick={toggleModal}>\n                <ImPencil />\n            </ContactButton>\n            <ContactButton\n                disabled={isLoading}\n                onClick={() => deleteContact(id)}>\n                {!isLoading ? <ImBin /> : <Loader />}\n            </ContactButton>\n            {(isModal && <Modal onClose={toggleModal}>\n                <ContactForm\n                    id={id}\n                    prevName={name}\n                    prevNumber={number}\n                    onClose={toggleModal}\n                />\n            </Modal>)}\n        </ContactItem>\n    )\n};\n\nContactListItem.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })\n};","import { useSelector } from \"react-redux\";\nimport { useGetContactsQuery } from \"redux/contactsApi\";\nimport { ContactListContainer } from \"./ContactList.styled\";\nimport { ContactListItem } from \"components/ContactListItem/ContactListItem\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const ContactList = () => {\n    const filter = useSelector(state => state.filter.value);\n    const { data: contacts = [], isLoading } = useGetContactsQuery();\n\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n    return (\n        <ContactListContainer>\n            {isLoading && <Loader message='Loading...'/>}\n            {filteredContacts && filteredContacts.map(contact => \n                <ContactListItem\n                    key={contact.id}\n                    contact={contact}\n                />\n            )}\n        </ContactListContainer>\n    )\n};","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\nmargin: 0 auto 30px auto;\ntext-align: center;\n`;\n\nexport const FilterLabel = styled.label`\nborder-bottom: 1px dotted #000000;\n`;\n\nexport const FilterInput = styled.input`\nborder: none;\nbackground-color: transparent;\noutline: none;\nfont-size: inherit;\nfont-family: inherit;\n\n&::placeholder {\n    font-style: italic;\n}\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/filterSlice\";\nimport { FilterContainer, FilterInput, FilterLabel } from \"./Filter.styled\";\n\nexport const Filter = () => {\n    const {value} = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n    \n    return (\n        <FilterContainer>\n            <FilterLabel>Find contacts by name: \n                <FilterInput\n                    type=\"text\"\n                    name=\"filter\"\n                    value={value}\n                    placeholder=' Enter name...'\n                    onChange={event => dispatch(setFilter(event.target.value))}\n                />\n            </FilterLabel>\n        </FilterContainer>\n    )\n};","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { FormTitle } from \"components/ContactForm/ContactForm.styled\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\n\nconst Contacts = () => (\n  <div style={{\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n  }}>\n    <ContactForm />\n    <div>\n      <FormTitle>Your contacts</FormTitle>\n      <Filter />\n      <ContactList />\n    </div>\n    \n  </div>\n);\n\nexport default Contacts;"],"names":["SubmitButton","styled","FormTitle","Form","Label","Input","ContactForm","id","prevName","prevNumber","onClose","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","useEditContactMutation","editContact","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","onSubmit","preventDefault","normalisedName","toLowerCase","find","item","notify","type","onChange","pattern","title","required","disabled","Loader","message","ContactListContainer","ContactItem","ContactWrapper","ContactButton","Overlay","ModalWindow","modalRoot","document","querySelector","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","ContactListItem","contact","useDeleteContactMutation","deleteContact","isModal","setIsModal","toggleModal","prev","ContactList","filter","useSelector","state","normalizedFilter","filteredContacts","includes","map","FilterContainer","FilterLabel","FilterInput","Filter","dispatch","useDispatch","placeholder","setFilter","style","display","flexWrap","justifyContent"],"sourceRoot":""}